apiVersion: v1
kind: Service
metadata:
  name: deepseek-ui
  namespace: deepseek
spec:
  type: NodePort
  selector:
    app: deepseek-ui
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30888
---
apiVersion: v1
kind: Service
metadata:
  name: deepseek-server
  namespace: deepseek
spec:
  selector:
    app: deepseek-server
  ports:
    - protocol: TCP
      port: 11434
      targetPort: 11434
---
apiVersion: v1
kind: Service
metadata:
  name: flask-webhook
  namespace: deepseek
spec:
  selector:
    app: flask-webhook
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5010
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flask-webhook-ingress
  namespace: deepseek
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"  # Let's Encrypt 사용 시
    nginx.ingress.kubernetes.io/ssl-redirect: "true"  # HTTP -> HTTPS 리디렉션
spec:
  tls:
  - hosts:
    - deepseek-telegram.duckdns.org
    - www.deepseek-telegram.duckdns.org
    secretName: letsencrypt-cert
  rules:
  - host: deepseek-telegram.duckdns.org
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: flask-webhook
            port:
              number: 80
      - path: /webhook
        pathType: Prefix
        backend:
          service:
            name: flask-webhook
            port:
              number: 80

